"use strict";if($(".js-employees-slider").length){var $slickElement=$(".js-employees-slider"),$slickWrap=$(".b-employees__slider");$(".b-employees__slider .js-next").on("click",function(){$(".js-employees-slider").slick("slickNext")}),$(".b-employees__slider .js-prev").on("click",function(){$(".js-employees-slider").slick("slickPrev")});var duration=500,detectDirection=function(s,e,i){var t="left",l=s.$slides.length-1;return i>e&&(t="right"),0==i&&e==l&&(t="right"),0==e&&i==l&&(t="left"),t};$slickElement.on("init",function(s,e){$slickElement.siblings().find(".js-all").text(e.$slides.length)}).on("beforeChange",function(s,e,i,t){var l=e.$slides.eq(i),o=100*(l.width()+l.height())/l.width(),n=10,a=100,c=e.$slides.eq(i),p=e.$slides.eq(t),r=detectDirection(e,i,t);"right"==r?(c.addClass("show").css({"clip-path":"polygon(0 0, "+o+"% 0%, 100% 100%, 0% 100%)",path:0}).animate({path:o},{step:function(s){c.css({"clip-path":"polygon(0 0, "+(o-s-n)+"% 0%, "+(100-s-n)+"% 100%, 0% 100%)"});var e=-a*(s/o);c.find(".b-employees__images").css({transform:"translateX("+e+"px)"})},duration:duration,complete:function(){c.css({"clip-path":""}).removeClass("show")}}),p.addClass("show").css({"clip-path":"polygon("+(-o+n)+"% 0%, "+(-o-100+n)+"% 0%, 100% 100%, 100% 100%)",path:0}).animate({path:o},{step:function(s,e){p.css({"clip-path":"polygon("+(o-s)+"% 0%, 100% 0%, 100% 100%,  "+(100-s)+"% 100%)"});var i=a-a*(s/o);p.find(".b-employees__images").css({transform:"translateX("+i+"px)"})},duration:duration,complete:function(){p.css({"clip-path":""}).removeClass("show")}})):(c.addClass("show").css({"clip-path":"polygon(0% 0%, 100% 0%, 100% 100%, "+(100-o)+"% 100%)",path:0}).animate({path:o},{step:function(s){c.css({"clip-path":"polygon("+s+"% 0%, 100% 0%, 100% 100%, "+(100-o+s)+"% 100%)"});var e=a*(s/o);c.find(".b-employees__images").css({transform:"translateX("+e+"px)"})},duration:duration,complete:function(){c.css({"clip-path":""}).removeClass("show")}}),p.addClass("show").css({"clip-path":"polygon(0% 0%, 0% 0%, "+(100-o)+"% 100%, 0% 100%)",path:0}).animate({path:o},{step:function(s,e){p.css({"clip-path":"polygon(0% 0%, "+(s-n)+"% 0%, "+(100-o+s-n)+"% 100%,  0% 100%)"});var i=a*(s/o)-a;p.find(".b-employees__images").css({transform:"translateX("+i+"px)"})},duration:duration,complete:function(){p.css({"clip-path":""}).removeClass("show")}})),$(".js-employees-slider").siblings().find(".js-now").text(t+1),$(".js-employees-slider").siblings().find(".js-line").css({width:0}).animate({width:"100%"},duration)}).slick({infinite:!0,slidesToShow:1,slidesToScroll:1,rows:0,speed:duration,dots:!1,fade:!0,arrows:!1,mobileFirst:!0,zIndex:2,asNavFor:$(".js-employees-nav")}),$(".js-employees-nav").slick({slidesToShow:1,slidesToScroll:1,dots:!1,focusOnSelect:!0,arrows:!1,mobileFirst:!0,infinite:!0,asNavFor:$slickElement})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
